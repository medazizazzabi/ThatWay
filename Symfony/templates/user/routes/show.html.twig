{% extends "user/user.html.twig" %}

{% block main %}
<style>
	.timeline {
		border-left: 3px solid #727cf5;
		border-bottom-right-radius: 4px;
		border-top-right-radius: 4px;
		background: rgba(114, 124, 245, 0.09);
		margin: 0 auto;
		letter-spacing: 0.2px;
		position: relative;
		line-height: 1.4em;
		font-size: 1.03em;
		padding: 50px;
		list-style: none;
		text-align: left;
		max-width: 40%;
	}

	@media(max-width: 767px) {
		.timeline {
			max-width: 98%;
			padding: 25px;
		}
	}

	.timeline h1 {
		font-weight: 300;
		font-size: 1.4em;
	}

	.timeline h2,
	.timeline h3 {
		font-weight: 600;
		font-size: 1rem;
		margin-bottom: 10px;
	}

	.timeline .event {
		border-bottom: 1px dashed #e8ebf1;
		padding-bottom: 25px;
		margin-bottom: 25px;
		position: relative;
	}

	@media(max-width: 767px) {
		.timeline .event {
			padding-top: 30px;
		}
	}

	.timeline .event:last-of-type {
		padding-bottom: 0;
		margin-bottom: 0;
		border: none;
	}

	.timeline .event:before,
	.timeline .event:after {
		position: absolute;
		display: block;
		top: 0;
	}

	.timeline .event:before {
		left: -207px;
		content: attr(data-date);
		text-align: right;
		font-weight: 100;
		font-size: 0.9em;
		min-width: 120px;
	}

	@media(max-width: 767px) {
		.timeline .event:before {
			left: 0;
			text-align: left;
		}
	}

	.timeline .event:after {
		-webkit-box-shadow: 0 0 0 3px #727cf5;
		box-shadow: 0 0 0 3px #727cf5;
		left: -55.8px;
		background: #fff;
		border-radius: 50%;
		height: 9px;
		width: 9px;
		content: "";
		top: 5px;
	}

	@media(max-width: 767px) {
		.timeline .event:after {
			left: -31.8px;
		}
	}
</style>

<div class="card rounded">
	<div class="card-body py-2">
		<div class="row">
			<div class="col-md-5">
				<h2>Route Details</h2>
				<table class="table">
					<tbody>
						<tr>
							<th>Name</th>
							<td>{{ route.Name }}</td>
						</tr>
						<tr>
							<th>Mode</th>
							<td>{{ route.Mode }}</td>
						</tr>
						<tr>
							<th>Origin</th>
							<td>{{ route.startstationid.name }}</td>
						</tr>
						<tr>
							<th>Destination</th>
							<td>{{ route.endstationid.name }}</td>
						</tr>
						<tr>
							<th>Route Duration</th>
							<td>{{ route.RouteDuration|date('H:i:s') }}</td>
						</tr>
						<tr>
							<th>Fare</th>
							<td>{{ route.Fare }}</td>
						</tr>
					</tbody>
				</table>
				<button type="button" class="btn btn-success mx-2 ri-qr-code-line" data-bs-toggle="modal" data-bs-target="#qrModal">
					<i class="fas fa-qrcode"></i>
				</button>
			</div>
			<div class="col-md-7">
				<div class="text-center py-5">
					<h5>Route Path</h5>
				</div>
				<ul class="timeline">
					{% set sortedRouteStations = routeStations|sort((a, b) => a.SequenceNumber <=> b.SequenceNumber) %}
					{% for routeStation in sortedRouteStations %}
						<li class="event">
							<a href="#" class="fw-bold text-green">{{ routeStation.stationid.name }}</a>
						</li>
					{% endfor %}
				</ul>
			</div>
		</div>
	</div>
</div></div>
<div class="modal fade" id="qrModal" tabindex="-1" role="dialog" aria-labelledby="qrModalLabel" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered" role="document">
			<div class="modal-content">
				<div class="modal-body text-center">
					<img src="" alt="QR Code" id="qrCodeImg">
				</div>
			</div>
		</div>
	</div>

<script>
		$(function () { // Handle the click event of the "QR" button
$('.ri-qr-code-line').click(function () { // Get the URL of the QR code endpoint
var qrUrl = "{{ path('app_QR', {'id': route.id, 'type': 'route'}) | raw }}";

// Set the source of the QR code image to the URL
$('#qrCodeImg').attr('src', qrUrl);
});
});
	</script>
<footer>
<div class="container">
	<div class="row">
		<div class="col-lg-12">
			<div class="copyright-text">
				<p>Copyright That Way!
				</p>
			</div>
		</div>
	</div>
</div></footer><!-- Bootstrap core JavaScript --><script src="/vendor/jquery/jquery.min.js"></script><script src="/vendor/bootstrap/js/bootstrap.bundle.min.js"></script><!-- Additional Scripts --><script src="assets/js/custom.js"></script><script src="/assets/js/owl.js"></script><script src="/assets/js/slick.js"></script><script src="/assets/js/isotope.js"></script><script src="/assets/js/accordions.js"></script><script language="text/Javascript">
cleared[0] = cleared[1] = cleared[2] = 0; // set a cleared flag for each field
function clearField(t) { // declaring the array outside of the
if (!cleared[t.id]) { // function makes it static and global
cleared[t.id] = 1; // you could use true and false, but that's more typing
t.value = ''; // with more chance of typos
t.style.color = '#fff';
}
}
{% endblock %}
